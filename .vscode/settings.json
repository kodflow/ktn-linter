{
  // Configuration KTN-Linter via wrapper
  "go.lintTool": "golangci-lint",
  "go.lintOnSave": "workspace",
  "go.useLanguageServer": true,
  "go.buildOnSave": "package",
  "go.vetOnSave": "off",
  "go.lintFlags": [],
  "go.alternateTools": {
    "golangci-lint": "${workspaceFolder}/bin/golangci-lint-wrapper"
  },
  // Activer les diagnostics du linter
  "go.toolsManagement.autoUpdate": false,
  "go.toolsManagement.checkForUpdates": "off",
  // Forcer l'utilisation du linter alternatif
  "go.lintTool": "golangci-lint",
  // Désactiver les diagnostics "unused" et autres dans gopls
  "gopls": {
    "analyses": {
      "unusedparams": false,
      "unusedwrite": false,
      "unusedvariable": false,
      "unusedfunc": false,
      "useany": false
    }
  },
  // Configuration pour les fichiers Go
  "[go]": {
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    },
    "editor.formatOnSave": true
  },
  // Build flags pour Go
  "go.buildFlags": ["-buildvcs=false"],
  "go.buildTags": "",
  // Build + Scan automatique à chaque save de fichier Go
  "triggerTaskOnSave.tasks": {
    "KTN-Linter: Build and Scan": [
      "**/*.go"
    ]
  },
  "triggerTaskOnSave.on": true,
  // Afficher automatiquement les erreurs
  "problems.autoReveal": true,
  "problems.showCurrentInStatus": true
}